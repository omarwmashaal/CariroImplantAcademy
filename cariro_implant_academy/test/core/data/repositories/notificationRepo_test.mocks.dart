// Mocks generated by Mockito 5.4.2 from annotations
// in cariro_implant_academy/test/core/data/repositories/notificationRepo_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:cariro_implant_academy/core/features/notification/data/datasource/notificationDataSource.dart'
    as _i3;
import 'package:cariro_implant_academy/core/features/notification/data/models/notificationModel.dart'
    as _i5;
import 'package:cariro_implant_academy/core/useCases/useCases.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeNoParams_0 extends _i1.SmartFake implements _i2.NoParams {
  _FakeNoParams_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NotificationDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockNotificationDataSource extends _i1.Mock
    implements _i3.NotificationDataSource {
  MockNotificationDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i5.NotificationModel>> getNotifications() =>
      (super.noSuchMethod(
        Invocation.method(
          #getNotifications,
          [],
        ),
        returnValue: _i4.Future<List<_i5.NotificationModel>>.value(
            <_i5.NotificationModel>[]),
      ) as _i4.Future<List<_i5.NotificationModel>>);
  @override
  _i4.Future<_i2.NoParams> markAllAsRead() => (super.noSuchMethod(
        Invocation.method(
          #markAllAsRead,
          [],
        ),
        returnValue: _i4.Future<_i2.NoParams>.value(_FakeNoParams_0(
          this,
          Invocation.method(
            #markAllAsRead,
            [],
          ),
        )),
      ) as _i4.Future<_i2.NoParams>);
  @override
  _i4.Future<_i2.NoParams> deleteNotification(int? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteNotification,
          [id],
        ),
        returnValue: _i4.Future<_i2.NoParams>.value(_FakeNoParams_0(
          this,
          Invocation.method(
            #deleteNotification,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.NoParams>);
}
