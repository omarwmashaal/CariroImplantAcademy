// Mocks generated by Mockito 5.4.2 from annotations
// in cariro_implant_academy/test/domain/patient/patientSearch/useCases/patientSearchByNameUseCase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:cariro_implant_academy/core/error/failure.dart' as _i5;
import 'package:cariro_implant_academy/core/useCases/useCases.dart' as _i8;
import 'package:cariro_implant_academy/features/patient/domain/entities/advancedPatientSearchEntity.dart' as _i9;
import 'package:cariro_implant_academy/features/patient/domain/entities/advancedTreatmentSearchEntity.dart' as _i10;
import 'package:cariro_implant_academy/features/patient/domain/entities/patientInfoEntity.dart' as _i6;
import 'package:cariro_implant_academy/features/patient/domain/repositories/patientInfoRepo.dart' as _i3;
import 'package:cariro_implant_academy/features/patient/domain/usecases/patientSearchUseCase.dart' as _i7;
import 'package:cariro_implant_academy/features/patientsMedical/prosthetic/domain/entities/prostheticDiagnosticEntity.dart' as _i11;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PatientInfoRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockPatientInfoRepo extends _i1.Mock implements _i3.PatientInfoRepo {
  MockPatientInfoRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.PatientInfoEntity>>> searchPatients(_i7.PatientSearchParams? params) => (super.noSuchMethod(
        Invocation.method(
          #searchPatients,
          [params],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, List<_i6.PatientInfoEntity>>>.value(_FakeEither_0<_i5.Failure, List<_i6.PatientInfoEntity>>(
          this,
          Invocation.method(
            #searchPatients,
            [params],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.PatientInfoEntity>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.PatientInfoEntity>> getPatient(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getPatient,
          [id],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.PatientInfoEntity>>.value(_FakeEither_0<_i5.Failure, _i6.PatientInfoEntity>(
          this,
          Invocation.method(
            #getPatient,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.PatientInfoEntity>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.PatientInfoEntity>> createPatient(_i6.PatientInfoEntity? patient) => (super.noSuchMethod(
        Invocation.method(
          #createPatient,
          [patient],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.PatientInfoEntity>>.value(_FakeEither_0<_i5.Failure, _i6.PatientInfoEntity>(
          this,
          Invocation.method(
            #createPatient,
            [patient],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.PatientInfoEntity>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.PatientInfoEntity>> updatePatientData(_i6.PatientInfoEntity? patient) => (super.noSuchMethod(
        Invocation.method(
          #updatePatientData,
          [patient],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.PatientInfoEntity>>.value(_FakeEither_0<_i5.Failure, _i6.PatientInfoEntity>(
          this,
          Invocation.method(
            #updatePatientData,
            [patient],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.PatientInfoEntity>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, int>> getNextAvailableId() => (super.noSuchMethod(
        Invocation.method(
          #getNextAvailableId,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, int>>.value(_FakeEither_0<_i5.Failure, int>(
          this,
          Invocation.method(
            #getNextAvailableId,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, int>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> checkDuplicateId(String? id) => (super.noSuchMethod(
        Invocation.method(
          #checkDuplicateId,
          [id],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, bool>>.value(_FakeEither_0<_i5.Failure, bool>(
          this,
          Invocation.method(
            #checkDuplicateId,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, bool>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i8.NoParams>> setPatientOut(
    int? id,
    String? outReason,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setPatientOut,
          [
            id,
            outReason,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i8.NoParams>>.value(_FakeEither_0<_i5.Failure, _i8.NoParams>(
          this,
          Invocation.method(
            #setPatientOut,
            [
              id,
              outReason,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i8.NoParams>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, String?>> compareDuplicateNumber(String? number) => (super.noSuchMethod(
        Invocation.method(
          #compareDuplicateNumber,
          [number],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, String?>>.value(_FakeEither_0<_i5.Failure, String?>(
          this,
          Invocation.method(
            #compareDuplicateNumber,
            [number],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, String?>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i9.AdvancedPatientSearchEntity>>> advancedSearchPatients(_i9.AdvancedPatientSearchEntity? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #advancedSearchPatients,
          [params],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, List<_i9.AdvancedPatientSearchEntity>>>.value(
            _FakeEither_0<_i5.Failure, List<_i9.AdvancedPatientSearchEntity>>(
          this,
          Invocation.method(
            #advancedSearchPatients,
            [params],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i9.AdvancedPatientSearchEntity>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i10.AdvancedTreatmentSearchEntity>>> advancedTreatmentSearch(_i10.AdvancedTreatmentSearchEntity? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #advancedTreatmentSearch,
          [params],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, List<_i10.AdvancedTreatmentSearchEntity>>>.value(
            _FakeEither_0<_i5.Failure, List<_i10.AdvancedTreatmentSearchEntity>>(
          this,
          Invocation.method(
            #advancedTreatmentSearch,
            [params],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i10.AdvancedTreatmentSearchEntity>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i11.ProstheticTreatmentEntity>>> advancedProstheticSearch(
    _i11.ProstheticTreatmentEntity? query,
    DateTime? from,
    DateTime? to,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #advancedProstheticSearch,
          [
            query,
            from,
            to,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, List<_i11.ProstheticTreatmentEntity>>>.value(
            _FakeEither_0<_i5.Failure, List<_i11.ProstheticTreatmentEntity>>(
          this,
          Invocation.method(
            #advancedProstheticSearch,
            [
              query,
              from,
              to,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i11.ProstheticTreatmentEntity>>>);
}
