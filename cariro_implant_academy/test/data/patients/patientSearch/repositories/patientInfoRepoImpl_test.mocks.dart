// Mocks generated by Mockito 5.4.2 from annotations
// in cariro_implant_academy/test/data/patients/patientSearch/repositories/patientInfoRepoImpl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:cariro_implant_academy/core/useCases/useCases.dart' as _i3;
import 'package:cariro_implant_academy/features/patient/data/datasources/patientSearchDataSource.dart' as _i5;
import 'package:cariro_implant_academy/features/patient/data/models/advancedSearchPatientsModel.dart' as _i8;
import 'package:cariro_implant_academy/features/patient/data/models/advancedTreatmentSearchModel.dart' as _i10;
import 'package:cariro_implant_academy/features/patient/data/models/patientSearchResponseModel.dart' as _i4;
import 'package:cariro_implant_academy/features/patient/domain/entities/advancedPatientSearchEntity.dart' as _i9;
import 'package:cariro_implant_academy/features/patient/domain/entities/advancedTreatmentSearchEntity.dart' as _i11;
import 'package:cariro_implant_academy/features/patient/domain/entities/patientInfoEntity.dart' as _i2;
import 'package:cariro_implant_academy/features/patient/domain/usecases/patientSearchUseCase.dart' as _i7;
import 'package:cariro_implant_academy/features/patientsMedical/prosthetic/domain/entities/prostheticDiagnosticEntity.dart' as _i12;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePatientInfoEntity_0 extends _i1.SmartFake implements _i2.PatientInfoEntity {
  _FakePatientInfoEntity_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNoParams_1 extends _i1.SmartFake implements _i3.NoParams {
  _FakeNoParams_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePatientInfoModel_2 extends _i1.SmartFake implements _i4.PatientInfoModel {
  _FakePatientInfoModel_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PatientSearchDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockPatientSearchDataSource extends _i1.Mock implements _i5.PatientSearchDataSource {
  MockPatientSearchDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<List<_i2.PatientInfoEntity>> searchPatients(_i7.PatientSearchParams? params) => (super.noSuchMethod(
        Invocation.method(
          #searchPatients,
          [params],
        ),
        returnValue: _i6.Future<List<_i2.PatientInfoEntity>>.value(<_i2.PatientInfoEntity>[]),
      ) as _i6.Future<List<_i2.PatientInfoEntity>>);
  @override
  _i6.Future<_i2.PatientInfoEntity> getPatient(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getPatient,
          [id],
        ),
        returnValue: _i6.Future<_i2.PatientInfoEntity>.value(_FakePatientInfoEntity_0(
          this,
          Invocation.method(
            #getPatient,
            [id],
          ),
        )),
      ) as _i6.Future<_i2.PatientInfoEntity>);
  @override
  _i6.Future<_i3.NoParams> setPatientOut(
    int? id,
    String? outReason,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setPatientOut,
          [
            id,
            outReason,
          ],
        ),
        returnValue: _i6.Future<_i3.NoParams>.value(_FakeNoParams_1(
          this,
          Invocation.method(
            #setPatientOut,
            [
              id,
              outReason,
            ],
          ),
        )),
      ) as _i6.Future<_i3.NoParams>);
  @override
  _i6.Future<int> getNextAvailableId() => (super.noSuchMethod(
        Invocation.method(
          #getNextAvailableId,
          [],
        ),
        returnValue: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);
  @override
  _i6.Future<bool> checkDuplicateId(String? id) => (super.noSuchMethod(
        Invocation.method(
          #checkDuplicateId,
          [id],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<List<_i8.AdvancedSearchPatientsModel>> advancedSearchPatients(_i9.AdvancedPatientSearchEntity? params) => (super.noSuchMethod(
        Invocation.method(
          #advancedSearchPatients,
          [params],
        ),
        returnValue: _i6.Future<List<_i8.AdvancedSearchPatientsModel>>.value(<_i8.AdvancedSearchPatientsModel>[]),
      ) as _i6.Future<List<_i8.AdvancedSearchPatientsModel>>);
  @override
  _i6.Future<List<_i10.AdvancedTreatmentSearchModel>> advancedTreatmentSearch(_i11.AdvancedTreatmentSearchEntity? params) => (super.noSuchMethod(
        Invocation.method(
          #advancedTreatmentSearch,
          [params],
        ),
        returnValue: _i6.Future<List<_i10.AdvancedTreatmentSearchModel>>.value(<_i10.AdvancedTreatmentSearchModel>[]),
      ) as _i6.Future<List<_i10.AdvancedTreatmentSearchModel>>);
  @override
  _i6.Future<List<_i12.ProstheticTreatmentEntity>> advancedProstheticSearch(
    _i12.ProstheticTreatmentEntity? query,
    DateTime? from,
    DateTime? to,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #advancedProstheticSearch,
          [
            query,
            from,
            to,
          ],
        ),
        returnValue: _i6.Future<List<_i12.ProstheticTreatmentEntity>>.value(<_i12.ProstheticTreatmentEntity>[]),
      ) as _i6.Future<List<_i12.ProstheticTreatmentEntity>>);
  @override
  _i6.Future<_i4.PatientInfoModel> createPatient(_i2.PatientInfoEntity? patient) => (super.noSuchMethod(
        Invocation.method(
          #createPatient,
          [patient],
        ),
        returnValue: _i6.Future<_i4.PatientInfoModel>.value(_FakePatientInfoModel_2(
          this,
          Invocation.method(
            #createPatient,
            [patient],
          ),
        )),
      ) as _i6.Future<_i4.PatientInfoModel>);
  @override
  _i6.Future<_i4.PatientInfoModel> updatePatientData(_i2.PatientInfoEntity? patient) => (super.noSuchMethod(
        Invocation.method(
          #updatePatientData,
          [patient],
        ),
        returnValue: _i6.Future<_i4.PatientInfoModel>.value(_FakePatientInfoModel_2(
          this,
          Invocation.method(
            #updatePatientData,
            [patient],
          ),
        )),
      ) as _i6.Future<_i4.PatientInfoModel>);
  @override
  _i6.Future<String?> checkDuplicateNumber(String? number) => (super.noSuchMethod(
        Invocation.method(
          #checkDuplicateNumber,
          [number],
        ),
        returnValue: _i6.Future<String?>.value(),
      ) as _i6.Future<String?>);
}
