// Mocks generated by Mockito 5.4.2 from annotations
// in cariro_implant_academy/test/data/authentication/repositories/authenticationRepoImpl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:cariro_implant_academy/core/features/authentication/data/datasources/aut_ASP_DataSource.dart'
    as _i4;
import 'package:cariro_implant_academy/core/features/authentication/data/models/AuthenticationUserModel.dart'
    as _i2;
import 'package:cariro_implant_academy/core/features/authentication/domain/usecases/loginUseCase.dart'
    as _i6;
import 'package:cariro_implant_academy/core/useCases/useCases.dart' as _i3;
import 'package:cariro_implant_academy/features/user/domain/entities/userEntity.dart'
    as _i7;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAuthenticationUserModel_0 extends _i1.SmartFake
    implements _i2.AuthenticationUserModel {
  _FakeAuthenticationUserModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNoParams_1 extends _i1.SmartFake implements _i3.NoParams {
  _FakeNoParams_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Auth_ASP_DataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuth_ASP_DataSource extends _i1.Mock
    implements _i4.Auth_ASP_DataSource {
  MockAuth_ASP_DataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.AuthenticationUserModel> login(_i6.LoginParams? loginParams) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [loginParams],
        ),
        returnValue: _i5.Future<_i2.AuthenticationUserModel>.value(
            _FakeAuthenticationUserModel_0(
          this,
          Invocation.method(
            #login,
            [loginParams],
          ),
        )),
      ) as _i5.Future<_i2.AuthenticationUserModel>);
  @override
  _i5.Future<_i3.NoParams> registerUser(_i7.UserEntity? user) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerUser,
          [user],
        ),
        returnValue: _i5.Future<_i3.NoParams>.value(_FakeNoParams_1(
          this,
          Invocation.method(
            #registerUser,
            [user],
          ),
        )),
      ) as _i5.Future<_i3.NoParams>);
  @override
  _i5.Future<bool> logOut() => (super.noSuchMethod(
        Invocation.method(
          #logOut,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
  @override
  _i5.Future<_i3.NoParams> resetPasswordForUser(int? id) => (super.noSuchMethod(
        Invocation.method(
          #resetPasswordForUser,
          [id],
        ),
        returnValue: _i5.Future<_i3.NoParams>.value(_FakeNoParams_1(
          this,
          Invocation.method(
            #resetPasswordForUser,
            [id],
          ),
        )),
      ) as _i5.Future<_i3.NoParams>);
}
